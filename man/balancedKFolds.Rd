% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/1-sampling-functions.R
\name{balancedKFolds}
\alias{balancedKFolds}
\title{Balanced K Folds}
\usage{
balancedKFolds(strata = NULL, k, undersample = FALSE, prob = NULL)
}
\arguments{
\item{strata}{vector of stratification variables. The population size is
\code{length(strata)}}

\item{k}{number of folds}

\item{undersample}{logical, whether to remove elements from the population
in order to try to obtain balanced folds}

\item{prob}{(optional) vector of positive numeric values, the probability weights
for obtaining the \code{strata} elements. If provided, it must be the same
length as \code{strata}}
}
\value{
A vector of length \code{length(strata)} containing the fold ids.
}
\description{
Assigns the population to k balanced folds.
See the \strong{Details} section below for further information.
}
\details{
If the population is balanced, each element in the population is
assigned to one of the k folds so that the percentage of each stratum is
preserved in each fold.
If the population is unbalanced and \code{undersample = TRUE}, the so-called
"random undersampling" is adopted, i.e. the proportion of the strata in the
population is adjusted by removing elements from the majority groups, so that
each stratum is balanced.
An error is raised if the population is unbalanced and \code{undersample = FALSE}.
}
\examples{
#Set seed for reproducibility
set.seed(seed = 5381L)

#Define balanced strata
strata = c(rep(1,6),rep(2,6))

#Check ratio
table(strata)/length(strata)

#Assign data to 3 folds
i = balancedKFolds(
 strata = strata,
 k = 3
)
#Check folds
i
#Check ratio in the folds
table(strata[i==1])/length(strata[i==1])
table(strata[i==2])/length(strata[i==2])
table(strata[i==3])/length(strata[i==3])

#Define unbalanced strata
strata = c(rep(1,6),rep(2,12))

#Check ratio
table(strata)/length(strata)

#Assign data to 3 folds
i = balancedKFolds(
 strata = strata,
 k = 3,
 undersample = TRUE
)
#Check folds
i
#Check ratio in the folds
table(strata[!is.na(i) & i==1])/length(strata[!is.na(i) & i==1])
table(strata[!is.na(i) & i==2])/length(strata[!is.na(i) & i==2])
table(strata[!is.na(i) & i==3])/length(strata[!is.na(i) & i==3])


#Raise an error
try(balancedKFolds(
 strata = strata,
 k = 3,
 undersample = FALSE
))

}
\author{
Alessandro Barberis
}
